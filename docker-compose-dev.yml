version: "3"

services:
  mysql:
    image: mysql:5.7.29
    container_name: mysql_${SITE}
    restart: unless-stopped
    tty: true
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - ./mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: ${SERVICE_TAGS}
      SERVICE_NAME: ${SERVICE_NAME}
    networks:
      - fut_laravel_dev

  php:
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: php_${SITE}
    ports:
      - ${PHP_PORT}:9000
    volumes:
      - ./backend:/var/www/html/backend
    networks:
      - fut_laravel_dev

  site:
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    container_name: nginx_${SITE}
    ports:
      - ${ADMIN_PORT}:80
    environment:
      - NGINX_HOST=${SITE_URL}
    volumes:
      - ./backend:/var/www/html/backend
    depends_on:
      - php
    networks:
      - fut_laravel_dev

  redis:
    image: redis:alpine
    container_name: redis_${SITE}
    restart: unless-stopped
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - ./redis:/data
    networks:
      - fut_laravel_dev

  supervisor:
    build:
      context: ./supervisor
      dockerfile: Dockerfile
    container_name: supervisor_${SITE}
    volumes:
      - ./backend:/var/www/html/backend
    networks:
      - fut_laravel_dev

  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile.dev
  #   container_name: frontend_${SITE}
  #   tty: true # docker run -t
  #   ports:
  #     - ${FRONTEND_PORT}:3000
  #   volumes:
  #     - ./frontend/:/var/www/html/frontend/
  #     - /var/www/html/frontend/node_modules
  #   working_dir: /var/www/html/frontend
  #   networks:
  #     - fut_laravel_dev

  adminer:
    image: adminer
    container_name: adminer_${SITE}
    restart: always
    ports:
      - ${ADMINER_PORT}:8080
    networks:
      - fut_laravel_dev

  composer:
    profiles: ["commands"]
    build:
      context: ./composer
      dockerfile: Dockerfile
    container_name: composer_${SITE}
    volumes:
      - ./backend:/var/www/html/backend
    working_dir: /var/www/html/backend
    user: laravel
    networks:
      - fut_laravel_dev

  npm:
    profiles: ["commands"]
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: npm_${SITE}
    volumes:
      - ./frontend/:/var/www/html/frontend/
      - /var/www/html/frontend/node_modules
    working_dir: /var/www/html/frontend
    entrypoint: ["npm"]
    networks:
      - fut_laravel_dev

  artisan:
    profiles: ["commands"]
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: artisan_${SITE}
    volumes:
      - ./backend:/var/www/html/backend
    working_dir: /var/www/html/backend
    entrypoint: ["php", "/var/www/html/backend/artisan"]
    networks:
      - fut_laravel_dev

  phpunit:
    profiles: ["test"]
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: phpunit_${SITE}
    volumes:
      - ./backend:/var/www/html/backend
    working_dir: /var/www/html/backend
    entrypoint: "vendor/bin/phpunit"
    networks:
      - fut_laravel_dev

  behat:
    profiles: ["test"]
    build:
      context: ./php
      dockerfile: Dockerfile
    container_name: behat_${SITE}
    volumes:
      - ./backend:/var/www/html/backend
    working_dir: /var/www/html/backend
    entrypoint: "vendor/bin/behat"
    networks:
      - fut_laravel_dev

  nodepackage:
    profiles: ["test"]
    build:
      context: ./npm
      dockerfile: Dockerfile
    container_name: nodepackage_${SITE}
    volumes:
      - ./backend:/var/www/html/backend
    working_dir: /var/www/html/backend
    networks:
      - fut_laravel_dev

  jest:
    profiles: ["test"]
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: jest_${SITE}
    volumes:
      - ./frontend/:/var/www/html/frontend/
      - /var/www/html/frontend/node_modules
    working_dir: /var/www/html/frontend
    entrypoint: ["npm", "run", "test"]
    networks:
      - fut_laravel_dev

  cypress:
    profiles: ["test"]
    build:
      context: ./e2e
      dockerfile: Dockerfile
    container_name: cypress_${SITE}
    environment:
      # pass base url to test pointing at the web application
      - CYPRESS_baseUrl=http://frontend:3000
    # share the current folder as volume to avoid copying
    working_dir: /e2e
    volumes:
      - ./e2e:/e2e
      - /e2e/node_modules
    networks:
      - fut_laravel_dev

  cypress_browser:
    profiles: ["test"]
    build:
      context: ./e2e
      dockerfile: Dockerfile
    container_name: cypress_browser_${SITE}
    working_dir: /e2e
    entrypoint: cypress open --project /e2e
    network_mode: host
    environment:
      CYPRESS_VIDEO: "false"
      CYPRESS_BASE_URL: "${SITE_PROTOCOL}//${SITE_URL}:${FRONTEND_PORT}"
      DISPLAY: "192.168.5.199:0" # Mac Setup
      #DISPLAY: # Linux Setup
    volumes:
      - ./e2e/:/e2e
      - /e2e/node_modules
      - ~/tmp/.X11-unix:/tmp/.X11-unix:rw # Mac Setup
      #- ~/.Xauthority:/root/.Xauthority:rw # Linux Setup

networks:
  fut_laravel_dev:
    ipam:
      config:
        - subnet: ${SUBNET}/24
